/* =============================================================================
//  Gallery components
// -> arrange child elements into rows and columns
// ========================================================================== */

/*doc
---
title: Gallery
name: gallery
category: Organisms
---

A gallery arranges small bits of content- usually listings or thumbnails - into rows and columns. It is responsive, so the column number will change based on screen width, and column width is fluid (percentage-based).

```html_example
    <ul class='gallery'>
        <li class="gallery-item">
            Wow, I'm in a gallery.
        </li>
        <li class="gallery-item">
            Me too.
        </li>
        <li class="gallery-item">
            Me too.
        </li>
        <li class="gallery-item">
            Me too.
        </li>
        <li class="gallery-item">
            Me too.
        </li>
    </ul>
```

Typically, you'll mark up a gallery as an unordered list, but it will work with most block-level elements (like `<nav>` or `<div>`). Just give the container a "gallery" class and the children a "gallery-item" class.

## Variations

There are three size variations: small, medium, and large. Medium is default, so that's the size you get with just "gallery." This only affects overall column width: a "large" gallery will have fewer columns at any given screen size than a "small" gallery. Note any size variation can be used at any screen size. The best choice mainly depends on the type of content you're displaying. If there's lots of text, it might look squished in a "small" gallery, whereas xsmall icons might get blown up really huge in a "large" gallery.

```
    <!-- small gallery, with narrow columns -->
    <ul class="gallery small"></ul>

    <!-- medium gallery, slightly wider columns -->
    <!-- (default, no modifier needed) -->
    <ul class="gallery"></ul>

    <!-- large gallery with wide columns -->
    <ul class="gallery large"></ul>
```

*/

// requires Bourbon & Modernizr
@import "../core/all";
@import "../layout/grid";
@import "../base/heading";
@import "../components/card";

$gallery-gutter: $grid-gutter;

$gallery-sizes: 2, 3, 4;

@mixin gallery-columns($number: 2, $g: $gallery-gutter) {
    display: inline-block;
    width: (100%/$number);
    padding-right: ($g/2);
    padding-left: ($g/2);
    vertical-align: top;

    @include yep(flexbox) {
        // use conventional width attribute instead of flexbox b/c of IE 11 box model bug
        // http://stackoverflow.com/questions/21942183/multiline-flexbox-in-ie11-calculating-widths-incorrectly
        // https://github.com/philipwalton/flexbugs#7-flex-basis-doesnt-account-for-box-sizingborder-box
        // http://codepen.io/philipwalton/pen/XJMWem
        @include flex(0 0 auto);
    }
}

/* Base
// -------------------------------------------------------------------------- */

.l-gallery {
    display: block; // in case flexbox isn't supported
    position: relative;
    font-size: 0;
    list-style: none;
    @include flex-direction(row);
    @include flex-wrap(wrap);
    @include align-items(stretch);

    > ul {
        padding-left: 0;
        margin-left: 0;
        list-style: none;
    }

    @include media('>small') {
        @include display(flex);
        // offset for column gutters
        margin-left: -($gallery-gutter/2);
        margin-right: -($gallery-gutter/2);
    }
}


/* Subcomponents
// -------------------------------------------------------------------------- */

/* --- Gallery Items -------------------------------------------------------- */
.l-gallery-item {
    @include type-size-default;
    display: block;
    position: relative;
    margin: 0;
    padding-bottom: $gallery-gutter;
    vertical-align: top;

    @include media('>small') { @include gallery-columns(2); }
    @include media('>medium') { @include gallery-columns(3); }
}


/* Modifiers
// -------------------------------------------------------------------------- */

/* --- Column sizing -------------------------------------------------------- */

@each $number in $gallery-sizes {
    @include breakpointify('.l-gallery--#{$number}') {
        @include display('flex');
        margin-left: -($gallery-gutter/2);
        margin-right: -($gallery-gutter/2);

        .l-gallery-item { @include gallery-columns($number); }
    }
}
